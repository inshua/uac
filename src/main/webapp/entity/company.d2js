d2js.mixin('../uac/node.d2js');

d2js.fetch = function(params){
	this.checkPrivilege("company.query");
	params.nodeProperty = 'parent_id';
	
	Object.assign(params, 
			{types: $ARRAY('varchar', findAncientTypesAnd('COMPANY')), 
			 parent_id: params.parent_id || this.session.user.node.id })

	if(params.name){
		sql{.
			with n as (
	           select node.* from uac.node node 
				where (node.id = :node OR node.path @> ARRAY[:node]) and type = any(:types)
				and strpos(node.name, :name) > 0
			),
			down as (
				select distinct node.* from uac.node node, n   
					where  node.path @> ARRAY[n.id]::int[] and node.type = any(:types)
					and not exists (select 1 from n where id = node.id)
			),
			up as (
				select distinct node.* from uac.node node, n   
				where  n.path @> ARRAY[node.id]::int[] and node.type = any(:types)
				and not exists (select 1 from n where id = node.id)
			),
			t as ( 
			       select * from n 
					union all 
					select * from down
					union all 
					select * from up
			)
			select distinct * from t order by path, name
		.}
	} else {
		sql{.
			select node.* from uac.node node 
			where (node.id = :parent_id OR node.path @> ARRAY[:parent_id]) and type = any(:types)
			order by path, name
		.}
	}
	
	return this.query(sql, params);
};

d2js.create = function(row){
	this.createNode(row, 'COMPANY');
}

d2js.modify = function(row){
	this.updateNode(row);
}

d2js.destroy = function(row){
	this.deleteNode(row);
}

d2js.validate = function(rcd, action){
	this.checkPrivilege("company." + action);
	
	if(rcd.parent_id == null) rcd.parent_id = this.session.user.node.id;
	
	$V(this,rcd, {
		name : [V.notNull,V.longest(30), V.uniqueCompanyInNode('uac.node', 'name')],  
		parent_id : [V.notNull],
		'def,address': [V.notNull,V.longest(40)], 
		'def,contactMan' : [V.notNull,V.longest(20)],
		'def,tel' : [V.notNull,V.longest(11)],
		'def,remark':[V.longest(2000)],
	});
}

V.uniqueCompanyInNode = function(table, tableField, primaryDesc, ignoreCase){	
	return {
		name : 'uniqueCompanyInNode',	
		check : function(v, fld, rcd, d2js){
			if(v == null || v === '') return;
			
			sql{.
				select * from node where parent_id = :parent_id and name = :name
			.}	
			var r = d2js.query(sql, rcd);
			
			if(r.rows.length){
				return '名称为' + v + '的公司已经存在';
			}
		}
	};
};

