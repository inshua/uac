[%
 	var tb = JSON.parse(request.tableDef);
 	
 	tb.camelCode = tb.code.split('_').map(function(s){return s.charAt(0).toUpperCase() + s.substr(1)}).join('')
	
	tb.nodeColumn = tb.columns[tb.columns.find(function(col){return col.parentTable == 'node';})];

	tb.ns = 'ns_' + tb.code

	imports('./jssp-lib/codegen.js');
%]
[%= '[%' %]
 	if(request._la == 'true'){
		return out.printJson([{name : '查询[%=tb.name%]', code : '[%=tb.code%].query', state : 'N'},
		        {name : '增加[%=tb.name%]', code : '[%=tb.code%].add', state : 'N', dependence : '[%=tb.code%].query'}, 
		        {name : '编辑[%=tb.name%]', code : '[%=tb.code%].edit', state : 'N', dependence : '[%=tb.code%].query'},
		        {name : '删除[%=tb.name%]', code : '[%=tb.code%].delete', state : 'N', dependence : '[%=tb.code%].query'}]);
 	}
	var anonymous = request.anonymous;
	if(session.user == null && !anonymous){
		return response.sendRedirect(website + 'index.jssp');
	}
[%= '%'+']' %]


<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>[%=tb.name%]</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    [%= '[%' %] this.includeJssp('../common/include_lib.jssp', {pureBootstrap: true}); [%= '%'+']' %]
    
</head>
<body>
	<template>
		<div molecule-def="[%= tb.camelCode %]" d2js.root="[%= tb.ns %]">
	
		    <div molecule="TableList" table="[%= tb.ns %],[%=tb.code%]" edit-dialog="dialog_[%= tb.code %]">
		        <div>
		            <form molecule="SearchForm">
		            
		[% tb.columns.filter(function(itm){return itm.searchUiIndex;}).sort(function(itm){return itm.searchUiIndex})
		 	.forEach(function(col){ %][% cond(col.listOfValues, function(){ %]
						<div molecule="SearchFormSelectItem" col="[%= col.code %]" text="[%= col.name %]" dict="[%=tb.code + '_' + col.code %]"></div>
		[%}, col.parentTable == 'node', function(){ %]
		             	<div molecule="SearchFormItem" col="node" text="[%= col.name %]">
		                    <div molecule="DropDownTree" table="[%= tb.ns %],node" value-col="id" display-col="name" parent-col="parent_id"  select="single" paging="false" show-header="false" data="[%= col.code %]">
		                    	<tr>
		                    	 	<m:th molecule="TreeNode" col="name" text="Name"></m:th>
						        </tr>
							</div>
		                </div>
		[%}, true, function(){ %]
						<div molecule="SearchFormItem" col="[%= col.code %]" text="[%= col.name %]">
		                    <input type="text" molecule="SearchInput">
		                </div>
		[% }); }); %]
		                <button molecule="SearchButton">Search</button>
		                [%= '[%' %] if(session.user.allowed['[%=tb.code%].add']){ [%= '%'+']' %]
		                <button molecule="AddButton">Add</button>
		                [%= '[%' %] } [%= '%'+']' %]
		            
		            </form>
		        </div>
		        <div molecule="TableError"></div>
		
		        <table molecule="List" allow-remove="[%= '[%' %]= session.user.allowed['[%=tb.code%].delete'] [%= '%'+']' %]">
		            <thead>
		                <tr>
		                    <th molecule="CheckHeader" col="id"></th>
		[% tb.columns.filter(function(col){return !col.primary}).forEach(function(col){
			cond(col == tb.nodeColumn,function(){ %]
					<th molecule="Header" sortable="true" col="node_name" text="[%= col.name %]"></th>
				[%}, col.listOfValues, function(){ %]
					<th molecule="Header" sortable="true" col="[%= col.code %]" text="[%= col.name %]" dict="[%=tb.code + '_' + col.code %]" renderer="dict|std"></th>
				[%}, true, function(){%]
					<th molecule="Header" sortable="true" col="[%= col.code %]" text="[%= col.name %]"></th>
				[% });%] 
			[%}); %]			                               
		                [%= '[%' %] if(session.user.allowed['[%=tb.code%].edit']){ [%= '%'+']' %]
		                
		                	<th data-t="id" renderer="editLink"></th>
		                [%= '[%' %] } [%= '%'+']' %]               
		                </tr>
		            </thead>
		        </table>
		    </div>
		
		    <div molecule="Dialog" title-text="[%=tb.name%]" id="dialog_[%= tb.code %]" d2js.root="" class="+ long">
		        <form class="ui form table-form">
		[% tb.columns.filter(function(itm){return itm.formUiIndex;}).sort(function(itm){return itm.formUiIndex})
			.forEach(function(col){ %][% cond(col.listOfValues, function(){ %]
					<div molecule="FormItem" col="[%= col.code %]" text="[%= col.name %]" dict="[%=tb.code + '_' + col.code %]">
		                <select molecule="Select"></select>
		            </div>
		[%}, col.parentTable == 'node', function(){ %]
					<div molecule="FormItem" col="[%= col.code %]" text="[%= col.name %]">
		            	 <div molecule="DropDownTree" table="[%= tb.ns %],node" value-col="id" display-col="name" select="single" 
		            	 		paging="false" show-header="false" data="[%= col.code %]">
		                   	<tr>
						        <m:th molecule="TreeNode" col="name" text="Name"></m:th>				        
					        </tr>
						</div>				
		            </div>
		[%}, true, function(){ %]					
					<div molecule="FormItem" col="[%= col.code %]" text="[%= col.name %]"><input type="text" molecule="Input"></div>					
		[% }); }); %]		        			                               
		        </form>
		    </div>
		    <script constructor>
				var $el = this.$el;
				var dataset = d2js.dataset.create('[%= tb.ns %]');
				this.dispose = function() {
					d2js.dataset.release('[%= tb.ns %]');
				}
				dataset.addTable('node', '../uac/node.d2js', {silent : false}).load('listAll', {types : [%= '[%' %]~ findAncientTypes('[%= tb.code.toUpperCase() %]') [%= '%'+']' %]});
			
				[% tb.columns.filter(function(col){return col.listOfValues;}).forEach(function(col){ %]
				Dicts.[%=tb.code + '_' + col.code %] = [%~ col.listOfValues %];
				[% });%]
				
			    var table = dataset.addTable('[%=tb.code %]', '../模块名/[%=tb.code %].d2js');
			    table.on('load', function (error) { d2js.render(); });
			    [%
			    	var defaultValues = {}  
			    	tb.columns.forEach(function(col){
			    		if(col.defaultValue){
			    			defaultValues[col.code] = col.defaultValue
			    		}
			    	})
			    %]
			    table.on('newrow', function(row) {
					row._setValues([%~ defaultValues %]);
				});
			    table.load('fetch');
			    
			</script>
	    </div>
    </template>
    <div molecule="[%= tb.camelCode %]"></div>
</body>

</html>

